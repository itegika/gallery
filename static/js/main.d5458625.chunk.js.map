{"version":3,"sources":["components/Modal/Modal.module.css","components/GalleryItem/GalleryItem.module.css","components/Gallery/Gallery.module.css","components/Button/Button.module.css","components/SearchBar/SearchBar.module.css","components/GalleryItem/GalleryItem.jsx","components/Gallery/Gallery.jsx","components/SearchBar/SearchBar.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Spinner/Spinner.jsx","Api/API.js","components/App.js","index.js"],"names":["module","exports","GalleryItem","image","onClick","className","styles","ImageGalleryItem","src","webformatURL","alt","tags","defaultProps","Gallery","images","ImageGallery","map","largeImageURL","id","SearchBar","onSubmit","useState","value","setValue","reset","Searchbar","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","target","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","event","currentTarget","Button","Spinner","color","height","width","timeout","fetchImages","searchQuery","currentPage","a","axios","get","params","key","q","page","per_page","image_type","orientation","result","data","hits","console","error","App","setImages","setSearchQuery","setCurrentPage","setLargeImageURL","isModalOpen","setIsModalOpen","isLoading","setIsLoading","setError","onSearch","API","prevImages","log","scrollTo","top","documentElement","scrollHeight","behavior","item","message","url","length","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5458625.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3fCJr\",\"Modal\":\"Modal_Modal__1gZgV\",\"ModalContent\":\"Modal_ModalContent__28T4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"GalleryItem_ImageGalleryItem__3Uhzj\",\"ImageGalleryItem-image\":\"GalleryItem_ImageGalleryItem-image__2M7LM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"Gallery_ImageGallery__176xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Q3C4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__2pAyS\",\"SearchForm\":\"SearchBar_SearchForm__3agGa\",\"SearchFormButton\":\"SearchBar_SearchFormButton__1XeOT\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__14LYh\",\"SearchFormInput\":\"SearchBar_SearchFormInput__1b_5H\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./GalleryItem.module.css\";\r\n\r\nconst GalleryItem = ({ image, onClick }) => (\r\n  <li className={styles.ImageGalleryItem}>\r\n    <img\r\n      src={image.webformatURL}\r\n      alt={image.tags}\r\n      className={styles[\"ImageGalleryItem-image\"]}\r\n      onClick={onClick}\r\n    />\r\n  </li>\r\n);\r\n\r\nGalleryItem.defaultProps = {\r\n  tags: \"\",\r\n};\r\n\r\nGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n  }),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GalleryItem from \"../GalleryItem\";\r\nimport styles from \"./Gallery.module.css\";\r\n\r\nconst Gallery = ({ images, onClick }) => (\r\n  <ul className={styles.ImageGallery}>\r\n    {images.map((image) => {\r\n      return (\r\n        <GalleryItem key={image.id} image={image} onClick={()=>onClick(image.largeImageURL)}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./SearchBar.module.css\";\r\n\r\nfunction SearchBar({ onSubmit }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(value);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={styles.SearchFormButton}>\r\n          <span className={styles.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n        <input\r\n          className={styles.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Modal.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nfunction Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.Overlay} onClick={handleBackdropClick}>\r\n      {children}\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <>\r\n    <button type=\"button\" className={styles.Button} onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  </>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={300}\r\n      width={300}\r\n      timeout={3000}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"23370146-76f1c4e47c9e63cf9b37b3a4d\";\r\nconst URL = \"https://pixabay.com/api/\";\r\n\r\nexport const fetchImages = async (searchQuery, currentPage) => {\r\n  try {\r\n    const result = await axios.get(URL, {\r\n      params: {\r\n        key: KEY,\r\n        q: searchQuery,\r\n        page: currentPage,\r\n        per_page: 12,\r\n        image_type: \"photo\",\r\n        orientation: \"horizontal\",\r\n      },\r\n    });\r\n    return result.data.hits;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Gallery from \"./Gallery\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Modal from \"./Modal\";\r\nimport Button from \"./Button\";\r\nimport Spinner from \"./Spinner\";\r\nimport * as API from \"../Api/API\";\r\nimport \"../../src/App.css\";\r\nimport styles from \"../components/Modal/Modal.module.css\";\r\n\r\nfunction App() {\r\n  const [images, setImages] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) return;\r\n    const onSearch = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await API.fetchImages(searchQuery, currentPage);\r\n        setImages((prevImages) => [...prevImages, ...data]);\r\n        setIsLoading(false);\r\n        // setCurrentPage((prevPage) => prevPage + 1);\r\n      } catch (error) {\r\n        setError(\"Error! Pls, try again\");\r\n        console.log(error);\r\n      } finally {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    onSearch();\r\n  }, [searchQuery, currentPage]);\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const getLargeUrl = (url) => {\r\n    setLargeImageURL(url);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const onFormSubmit = (item) => {\r\n    setSearchQuery(item);\r\n    setImages([]);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    setIsLoading(true);\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchBar onSubmit={onFormSubmit} />\r\n      {error && <p>{error.message}</p>}\r\n      <Gallery images={images} onClick={getLargeUrl} />\r\n      {isModalOpen && (\r\n        <Modal onClose={toggleModal}>\r\n          <img className={styles.Modal} src={largeImageURL} alt=\"\" />\r\n        </Modal>\r\n      )}\r\n      {isLoading && <Spinner />}\r\n      {images.length >= 12 && !isLoading && <Button onClick={onLoadMore} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}